{"version":3,"file":"index.js","sources":["../src/modules/showCaptchaBttn/CaptchaProps.js","../src/components/slider/CaptchaSlider.js","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/components/captchaInput/CaptchaInput.js","../src/components/captchaSubmitBttn/CaptchaSubmitBttn.js","../src/components/updateCaptchaBttn/UpdateCaptchaBttn.js","../src/captchaes/textCaptcha/TextCaptcha.js","../src/conf.js","../src/modules/CaptchaBaseModule.js","../src/captchaes/deadCaptcha/DeadCaptcha.js","../src/components/captchaExitBttn/CaptchaExitBttn.js","../src/captchaes/mathCaptcha/MathCaptcha.js","../src/components/captchaToSpeech/CaptchaToSpeech.js","../src/captchaes/audioCaptcha/AudioCaptcha.js","../src/captchaes/graphCaptcha/GraphCaptcha.js","../src/captchaes/animeCaptcha/AnimeCaptcha.js","../src/components/captchaManager/CaptchaManager.js"],"sourcesContent":["import { useState } from 'react';\r\nimport React from 'react';\r\n\r\nexport default function CaptchaProps() {\r\n    const [captchaIsActive, updateCaptchaIsActive] = useState(false);\r\n    const [captchaToken, updateCaptchaToken] = useState(false);\r\n\r\n    return { captchaIsActive, updateCaptchaIsActive, captchaToken, updateCaptchaToken }\r\n}","import { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport styles from './captchaSlider.css';\r\n\r\nexport default function CaptchaSlider({ isDesktop, updateCaptchaData, updateCaptchaIndex, captchas, captchaIndex }) {\r\n\r\n    const [width, setWidth] = useState(0);\r\n\r\n    const [failedCounts, updateFailedCounts] = useState(0);\r\n\r\n    const changeWidth = (event) => {\r\n        setWidth(event.target.value);\r\n        updateCaptchaIndex(event.target.value / 20);\r\n    };\r\n\r\n    function checkRangePosition() {\r\n        updateFailedCounts(failedCounts + 1);\r\n        if (failedCounts == 4) {\r\n            updateFailedCounts(0);\r\n            updateCaptchaData();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {captchas &&\r\n                <input\r\n                    className={isDesktop ? styles.captchaSliderDesktop + ' ' + styles.captchaSlider :\r\n                        styles.captchaSliderPortrait + ' ' + styles.captchaSlider}\r\n                    type=\"range\"\r\n                    onChange={changeWidth}\r\n                    onMouseUp={() => checkRangePosition()}\r\n                    onTouchEnd={() => checkRangePosition()}\r\n                    min={0}\r\n                    max={(captchas.length - 1) * 20}\r\n                    step={20}\r\n                    value={width}\r\n                />\r\n            }\r\n\r\n            {/* <p>{width}</p> */}\r\n        </div>\r\n    );\r\n}\r\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { useEffect, useRef } from 'react';\r\nimport React from 'react';\r\n\r\nimport styles from './captchaInput.css';\r\n\r\nexport default function CaptchaInput({ isDesktop, cbm, updateCaptchaValue, updateCaptchaToken,\r\n    updateInputRef, captchaIDs, captchaValue,\r\n    updateCaptchaIsActive, updateCaptchaData, audioStop, updErrCounts, errCounts, captchaIndex,\r\n    captchaType }) {\r\n    const captchaInpRef = useRef();\r\n\r\n    useEffect(() => {\r\n        updateInputRef(captchaInpRef);\r\n    }, [])\r\n\r\n    async function submitValue() {\r\n        try {\r\n            const answer = await cbm.checkCaptcha({ code: captchaValue, captchaIDs: captchaIDs, index: captchaIndex, type: captchaType });\r\n            if (answer) {\r\n                updateCaptchaToken(answer.captchaToken);\r\n                updateCaptchaIsActive(false);\r\n                if (audioStop)\r\n                    audioStop();\r\n            }\r\n        } catch (err) {\r\n            updateCaptchaData(true);\r\n            if (audioStop)\r\n                audioStop();\r\n            updErrCounts(errCounts + 1);\r\n            if (errCounts == 5) {\r\n                updErrCounts(0);\r\n                updateCaptchaToken(false);\r\n                updateCaptchaIsActive(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input ref={captchaInpRef} onKeyUp={(event) => {\r\n            if (event.key == 'Enter') {\r\n                captchaInpRef.current.value = '';\r\n                submitValue();\r\n            }\r\n        }} onChange={() => updateCaptchaValue(captchaInpRef.current.value)}\r\n            className={isDesktop ? styles.captchaInputDesktop : styles.captchaInputPortrait} placeholder=\"Ваш ответ\" />\r\n    );\r\n}","\r\nimport styles from './captchaSubmitBttn.css';\r\nimport React from 'react';\r\n\r\nexport default function CaptchaSubmitBttn({ isDesktop, captchaValue, cbm,\r\n    captchaIDs, updateCaptchaToken, updateCaptchaIsActive, updateCaptchaData, inputRef,\r\n    audioStop, updErrCounts, errCounts, captchaIndex, updateActiveStates, captchaType,\r\n    updateCaptchaIndex }) {\r\n\r\n    async function submitValue() {\r\n        if (inputRef)\r\n            inputRef.current.value = '';\r\n        try {\r\n            if (updateActiveStates) {\r\n                updateActiveStates([\r\n                    false, false, false,\r\n                    false, false, false,\r\n                    false, false, false,\r\n                ])\r\n            }\r\n            const answer = await cbm.checkCaptcha({ code: captchaValue, captchaIDs: captchaIDs, index: captchaIndex, type: captchaType });\r\n            if (answer) {\r\n                updateCaptchaToken(answer.captchaToken);\r\n                updateCaptchaIsActive(false);\r\n                if (audioStop)\r\n                    audioStop();\r\n            }\r\n        } catch (err) {\r\n            updateCaptchaData(true);\r\n            if (updateCaptchaIndex)\r\n                updateCaptchaIndex(1)\r\n            if (audioStop)\r\n                audioStop();\r\n            updErrCounts(errCounts + 1);\r\n            if (errCounts == 5) {\r\n                updErrCounts(0);\r\n                updateCaptchaToken(false);\r\n                updateCaptchaIsActive(false);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <button onClick={submitValue} className={isDesktop ? styles.captchaSubmitBttnDesktop + ' ' + styles.captchaSubmitBttn + ' ' + styles.noselect\r\n            : styles.captchaSubmitBttnPortrait + ' ' + styles.captchaSubmitBttn + ' ' + styles.noselect}>Отправить</button>\r\n    );\r\n}","import React from \"react\";\r\nimport { useState } from 'react';\r\n\r\nimport styles from './updateCaptchaBttn.css';\r\n\r\nexport default function UpdateCaptchaBttn({ updateCaptchaData, isDesktop, audioStop, updateCaptchaToken,\r\n    updateCaptchaIsActive, updateCaptchaIndex\r\n}) {\r\n    const [rerunCounts, updateRerunCounts] = useState(0);\r\n\r\n    return (\r\n        <div >\r\n            <div\r\n                onClick={() => {\r\n                    updateRerunCounts(rerunCounts + 1);\r\n                    if (rerunCounts == 5) {\r\n                        if (updateCaptchaIndex)\r\n                            updateCaptchaIndex(1);\r\n                        updateRerunCounts(0);\r\n                        updateCaptchaToken(false);\r\n                        updateCaptchaIsActive(false);\r\n                    } else {\r\n                        if (audioStop)\r\n                            audioStop();\r\n                        updateCaptchaData(true);\r\n                    }\r\n                }}\r\n                className={isDesktop ? styles.updateCaptchaBttnDesktop : styles.updateCaptchaBttnPortrait} />\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport React from 'react'\r\n\r\nimport CaptchaSlider from '../../components/slider/CaptchaSlider';\r\nimport CaptchaInput from '../../components/captchaInput/CaptchaInput';\r\nimport CaptchaSubmitBttn from '../../components/captchaSubmitBttn/CaptchaSubmitBttn';\r\nimport UpdateCaptchaBttn from '../../components/updateCaptchaBttn/UpdateCaptchaBttn';\r\n\r\nimport styles from './textCaptcha.css';\r\n\r\nexport default function TextCaptcha({ cbm, updateCaptchaIsActive, updateInputRef,\r\n    inputRef, isDesktop, captchaValue, updateCaptchaValue, updateCaptchaToken, captchaIsActive,\r\n    captchaType\r\n}) {\r\n    const [errCounts, updErrCounts] = useState(0);\r\n\r\n    const [captchas, updateCaptchas] = useState('');\r\n    const [captchaIndex, updateCaptchaIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        updateCaptchaData();\r\n        updateCaptchaToken(false);\r\n    }, []);\r\n\r\n    async function updateCaptchaData() {\r\n        if (captchaIsActive) {\r\n            const answer = await cbm.getCaptcha('TEXT');\r\n            if (answer) {\r\n                updateCaptchas(answer.captchas);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <img\r\n                className={styles.captchaImg}\r\n                src={captchas[captchaIndex]?.body}\r\n            />\r\n            <div >\r\n                <CaptchaSlider isDesktop={isDesktop}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    captchas={captchas}\r\n                    updateCaptchaIndex={updateCaptchaIndex} />\r\n            </div>\r\n            <div className={styles.captchaBttnsContainer}>\r\n                <UpdateCaptchaBttn\r\n                    updateCaptchaIndex={updateCaptchaIndex} updateCaptchaData={updateCaptchaData}\r\n                    isDesktop={isDesktop}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                />\r\n            </div>\r\n            <div className={styles.unswerContainer}>\r\n                <CaptchaInput isDesktop={isDesktop} updateCaptchaValue={updateCaptchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas[captchaIndex]?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateInputRef={updateInputRef}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    captchaValue={captchaValue}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    captchaType={captchaType}\r\n                />\r\n                <CaptchaSubmitBttn isDesktop={isDesktop} captchaValue={captchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas[captchaIndex]?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    inputRef={inputRef}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    captchaType={captchaType}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","\r\nconst CONFIG = { BACKEND_API: `https://captcha.sixhands.co` }//`http://localhost:24070/` };\r\n\r\nexport default CONFIG;","import axios from 'axios';\r\nimport CONFIG from '../conf';\r\nclass CaptchaBaseModule {\r\n\r\n    async postRequest(request, props = null, headers) {\r\n        try {\r\n            const response = await axios.post(`${CONFIG.BACKEND_API}/${request}`, props);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error(`Error getting data from API: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    async getRequest(request, props = null) {\r\n        try {\r\n            const response = await axios.get(`${CONFIG.BACKEND_API}/${request}`, props);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error(`Error getting data from API: ${error.message}`);\r\n        }\r\n    }\r\n\r\n\r\n    async getCaptcha(type) {\r\n        const answer = await this.postRequest(`captchas`, { type: type, });\r\n        if (answer) return answer;\r\n    }\r\n\r\n    async getServerStatus() {\r\n        const answer = await this.getRequest(`health`);\r\n        if (answer) return answer;\r\n    }\r\n\r\n    async checkCaptcha(req) {\r\n        let answer = null;\r\n        if (req.index)\r\n            answer = await this.postRequest(`captchas/check`, req, true);\r\n        else\r\n            answer = await this.postRequest(`captchas/check`, req, true);\r\n        if (answer) return answer;\r\n    }\r\n\r\n\r\n\r\n    // async post(endpoint, data = {}) {\r\n    //     try {\r\n    //         const response = await axios.post(`${this.baseUrl}/${endpoint}`, data);\r\n    //         return response.data;\r\n    //     } catch (error) {\r\n    //         throw new Error(`Error posting data to API: ${error.message}`);\r\n    //     }\r\n    // }\r\n\r\n    // Добавьте другие методы, такие как put(), delete() и т.д., если нужно.\r\n\r\n}\r\n\r\nexport default CaptchaBaseModule;\r\n\r\n","import React from \"react\";\r\n\r\nimport styles from \"./deadCaptcha.css\";\r\n\r\nexport default function DeadCaptcha({ isDesktop }) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.serverStatus}></div>\r\n            <span className={isDesktop ? styles.captchaStatusNotificationdDesktop : styles.captchaStatusNotificationdPortrait}>Сервер спит</span>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport styles from './captchaExitBttn.css';\r\n\r\nexport default function CaptchaExitBttn({ isDesktop, updateCaptchaIsActive }) {\r\n\r\n    function leftCaptchaContainer() {\r\n        updateCaptchaIsActive(false);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.captachaExitContainer + ' ' + styles.noselect}>\r\n            <img\r\n                onClick={leftCaptchaContainer}\r\n                className={isDesktop ? styles.captchaExitBttnDesktop\r\n                    : styles.captchaExitBttnPortrait}\r\n            />\r\n        </div>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport React from 'react'\r\n\r\nimport CaptchaSlider from '../../components/slider/CaptchaSlider';\r\nimport CaptchaInput from '../../components/captchaInput/CaptchaInput';\r\nimport CaptchaSubmitBttn from '../../components/captchaSubmitBttn/CaptchaSubmitBttn';\r\nimport UpdateCaptchaBttn from '../../components/updateCaptchaBttn/UpdateCaptchaBttn';\r\n\r\nimport styles from './mathCaptcha.css';\r\n\r\nexport default function TextCaptcha({ cbm, updateCaptchaIsActive, updateInputRef,\r\n    inputRef, isDesktop, captchaValue, updateCaptchaValue, updateCaptchaToken,\r\n    captchaType\r\n}) {\r\n    const [errCounts, updErrCounts] = useState(0);\r\n\r\n    const [captchas, updateCaptchas] = useState('');\r\n    const [captchaIndex, updateCaptchaIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        updateCaptchaData();\r\n        updateCaptchaToken(false);\r\n    }, []);\r\n\r\n    async function updateCaptchaData() {\r\n        const answer = await cbm.getCaptcha('MATH');\r\n        if (answer) {\r\n            updateCaptchas(answer.captchas);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <img\r\n                className={styles.captchaImg}\r\n                src={captchas[captchaIndex]?.body}\r\n            />\r\n            <div >\r\n                <CaptchaSlider isDesktop={isDesktop}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    captchas={captchas} />\r\n\r\n            </div>\r\n            <div className={styles.captchaBttnsContainer}>\r\n                <UpdateCaptchaBttn\r\n                    updateCaptchaIndex={updateCaptchaIndex} updateCaptchaData={updateCaptchaData}\r\n                    isDesktop={isDesktop}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                />\r\n            </div>\r\n            <div className={styles.unswerContainer}>\r\n                <CaptchaInput isDesktop={isDesktop} updateCaptchaValue={updateCaptchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas[captchaIndex]?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateInputRef={updateInputRef}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    captchaValue={captchaValue}\r\n                    captchaIndex={captchaIndex}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    captchaType={captchaType}\r\n                />\r\n                <CaptchaSubmitBttn isDesktop={isDesktop} captchaValue={captchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas[captchaIndex]?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    inputRef={inputRef}\r\n                    captchaIndex={captchaIndex}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    captchaType={captchaType}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styles from './captchaToSpeech.css';\r\n\r\nexport default function CaptchaToSpeech({ audioPlay, isDesktop }) {\r\n\r\n    return (\r\n        <div className={isDesktop ? styles.captchaToSpeechBttnDesktop : styles.captchaToSpeechBttnPortrait} onClick={() => audioPlay()}></div>\r\n    );\r\n}","import { useEffect, useRef, useState } from 'react';\r\nimport React from 'react'\r\n\r\nimport styles from './audioCaptcha.css';\r\nimport CaptchaInput from '../../components/captchaInput/CaptchaInput';\r\nimport CaptchaSubmitBttn from '../../components/captchaSubmitBttn/CaptchaSubmitBttn';\r\nimport CaptchaToSpeech from '../../components/captchaToSpeech/CaptchaToSpeech';\r\nimport UpdateCaptchaBttn from '../../components/updateCaptchaBttn/UpdateCaptchaBttn';\r\n\r\nexport default function AudioCaptcha({ cbm, updateCaptchaIsActive, updateInputRef,\r\n    inputRef, isDesktop, captchaValue, updateCaptchaValue, updateCaptchaToken,\r\n    captchaType\r\n}) {\r\n\r\n    const [captchas, updateCaptchas] = useState('');\r\n    const [noticeIsActive, updateNoticeState] = useState(false);\r\n    const [errCounts, updErrCounts] = useState(0);\r\n    const audioPlayer = useRef();\r\n\r\n    useEffect(() => {\r\n        updateCaptchaData();\r\n        updateCaptchaToken(false);\r\n\r\n    }, []);\r\n\r\n    async function updateCaptchaData(isUpd) {\r\n        const answer = await cbm.getCaptcha('AUDIO');\r\n        if (answer) {\r\n            updateCaptchas(answer.captchas[0]);\r\n            if (isUpd) {\r\n                if (!noticeIsActive) {\r\n                    updateNoticeState(true);\r\n                    setTimeout(() => updateNoticeState(false), 1000)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function audioStop() {\r\n        if (audioPlayer?.current) {\r\n            audioPlayer.current.pause();\r\n            audioPlayer.current.currentTime = 0;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function audioPlay() {\r\n        if (audioPlayer?.current) {\r\n            audioPlayer.current.play();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <audio\r\n                src={captchas.body}\r\n                ref={audioPlayer}\r\n            // onTimeUpdate={onPlaying}\r\n            ></audio>\r\n            <div className={styles.captchaBttnsContainer}>\r\n                <div className={styles.captchaBttn}>\r\n                    <UpdateCaptchaBttn\r\n                        isDesktop={isDesktop}\r\n                        audioPlayer={audioPlayer}\r\n                        updateCaptchaData={updateCaptchaData}\r\n                        audioStop={audioStop}\r\n                    />\r\n                </div>\r\n                <div className={styles.captchaBttn + ' ' + styles.captchaSpeechBttn}>\r\n                    <CaptchaToSpeech audioPlay={audioPlay} isDesktop={isDesktop} />\r\n                </div>\r\n            </div>\r\n            <span className={isDesktop ? styles.updNoticeDesk\r\n                : styles.updNoticePort}>{noticeIsActive ? 'Капча успешно обновлена!' : 'Прослушайте капчу'}</span>\r\n            <div className={styles.unswerContainer}>\r\n                <CaptchaInput isDesktop={isDesktop} updateCaptchaValue={updateCaptchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateInputRef={updateInputRef}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    audioStop={audioStop}\r\n                    captchaType={captchaType}\r\n                    captchaValue={captchaValue}\r\n                />\r\n                <CaptchaSubmitBttn isDesktop={isDesktop} captchaValue={captchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    inputRef={inputRef}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    audioStop={audioStop}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState, createRef } from 'react';\r\nimport React from 'react'\r\n\r\n// import CaptchaSlider from '../../components/slider/CaptchaSlider';\r\n// import CaptchaInput from '../../components/captchaInput/CaptchaInput';\r\nimport CaptchaSubmitBttn from '../../components/captchaSubmitBttn/CaptchaSubmitBttn';\r\nimport UpdateCaptchaBttn from '../../components/updateCaptchaBttn/UpdateCaptchaBttn';\r\n\r\nimport styles from './graphCaptcha.css';\r\n\r\nexport default function GraphCaptcha({ cbm, updateCaptchaIsActive, updateInputRef,\r\n    inputRef, isDesktop, captchaValue, updateCaptchaValue, updateCaptchaToken,\r\n    captchaType\r\n}) {\r\n    const [errCounts, updErrCounts] = useState(0);\r\n    const [captchas, updateCaptchas] = useState([]);\r\n    const [captchaIndex, updateCaptchaIndex] = useState(0);\r\n    const [activeCaptchasIndex, updActiveCapthasIndex] = useState([]);\r\n    const [activeCaptchas, updActiveCapthas] = useState([]);\r\n    const [activeStates, updateActiveStates] = useState([\r\n        false, false, false,\r\n        false, false, false,\r\n        false, false, false,\r\n    ]);\r\n\r\n    const [noticeIsActive, updateNoticeState] = useState(true);\r\n\r\n    useEffect(() => {\r\n        updateCaptchaData();\r\n        updateCaptchaToken(false);\r\n    }, []);\r\n\r\n    async function updateCaptchaData(isUpd) {\r\n        updateNoticeState(true);\r\n        updActiveCapthas([]);\r\n        const answer = await cbm.getCaptcha('GRAPH');\r\n        if (answer) {\r\n            updateCaptchas(answer.captchas);\r\n            updateNoticeState(false);\r\n            //setTimeout(() => updateNoticeState(false), 1000)\r\n        }\r\n    }\r\n\r\n    function changeCaptchaState(index) {\r\n        const indexCaptcha = activeCaptchasIndex.indexOf(index)\r\n        const newActiveStates = [...activeStates];\r\n        if (indexCaptcha >= 0) {\r\n            updActiveCapthasIndex([...activeCaptchasIndex].filter(function (elem) {\r\n                return elem !== index\r\n            }));\r\n\r\n            updActiveCapthas([...activeCaptchas].filter((item, i) => {\r\n                return captchas[index].captchaID !== item\r\n            }))\r\n            newActiveStates[index] = false;\r\n            updateActiveStates(newActiveStates);\r\n        } else {\r\n            updActiveCapthasIndex([...activeCaptchasIndex, index]);\r\n            updActiveCapthas([...activeCaptchas, captchas[index].captchaID])\r\n            newActiveStates[index] = true;\r\n            updateActiveStates(newActiveStates);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className={styles.container}>\r\n                <div className={isDesktop ? styles.captchaContainer + ' ' + styles.gripGadDesktop : styles.captchaContainer + ' ' + styles.gripGadPortrait}>\r\n                    {captchas.map((captcha, index) =>\r\n                        <div onClick={() => { changeCaptchaState(index) }} key={index}\r\n                            className={(isDesktop ? styles.captchaDesktop + ' ' + (activeStates[index] ? styles.elemActiveDesktop : '')\r\n                                : styles.captchaPortrait + ' ' + (activeStates[index] ? styles.elemActivePortrait : ''))}\r\n                            style={{ content: `url(${captcha?.body})` }}\r\n                        ></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <p className={isDesktop ? styles.updNoticeDesk\r\n                : styles.updNoticePort}>{noticeIsActive ? 'Получаем новую капчу...' : 'Выберите все одинаковые изображения'}</p>\r\n            <div className={styles.captchaBttnsContainer}>\r\n                <UpdateCaptchaBttn\r\n                    updateCaptchaIndex={updateCaptchaIndex} updateCaptchaData={updateCaptchaData}\r\n                    isDesktop={isDesktop}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                />\r\n            </div>\r\n            <div className={styles.unswerContainer}>\r\n                <CaptchaSubmitBttn isDesktop={isDesktop} captchaValue={captchaValue}\r\n                    cbm={cbm} captchaIDs={activeCaptchas}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    inputRef={inputRef}\r\n                    captchaIndex={captchaIndex}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    captchaType={captchaType}\r\n                    updateActiveStates={updateActiveStates}\r\n                />\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}\r\n","import { useEffect, useState, createRef } from 'react';\r\nimport React from 'react'\r\n\r\nimport CaptchaSubmitBttn from '../../components/captchaSubmitBttn/CaptchaSubmitBttn';\r\nimport UpdateCaptchaBttn from '../../components/updateCaptchaBttn/UpdateCaptchaBttn';\r\n\r\nimport styles from './animeCaptcha.css';\r\n\r\nexport default function AnimeCaptcha({ cbm, updateCaptchaIsActive, updateInputRef,\r\n    inputRef, isDesktop, captchaValue, updateCaptchaValue, updateCaptchaToken,\r\n    captchaType\r\n}) {\r\n    const [errCounts, updErrCounts] = useState(0);\r\n    const [captchas, updateCaptchas] = useState([]);\r\n    const [standard, updStandard] = useState({});\r\n\r\n    const [captchaIndex, updateCaptchaIndex] = useState(1);\r\n\r\n    const [noticeIsActive, updateNoticeState] = useState(true);\r\n\r\n    useEffect(() => {\r\n        updateCaptchaData();\r\n        updateCaptchaToken(false);\r\n    }, []);\r\n\r\n    async function updateCaptchaData(isUpd) {\r\n        updateNoticeState(true);\r\n        const answer = await cbm.getCaptcha('ANIME');\r\n        if (answer) {\r\n            updateCaptchas(answer.captchas); // .filter((element, index) => index !== 0)\r\n            updStandard(answer.captchas[0]);\r\n            updateNoticeState(false);\r\n        }\r\n    }\r\n\r\n    const switchImage = (state) => {\r\n        let index = captchaIndex + state;\r\n        if (index < 1)\r\n            index = captchas.length - 1;\r\n        else if (index > captchas.length - 1)\r\n            index = 1;\r\n        updateCaptchaIndex(index);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {!noticeIsActive && <div className={styles.container + ' ' + styles.noselect}>\r\n                <div className={isDesktop ? styles.captchaContainer + ' ' + styles.gripGadDesktop : styles.captchaContainer + ' ' + styles.gripGadPortrait}>\r\n                    <div\r\n                        className={(isDesktop ? styles.captchaDesktop : styles.captchaPortrait)}\r\n                        style={{ content: `url(${standard?.body})` }}\r\n                    />\r\n\r\n                    <div\r\n                        className={(isDesktop ? styles.captchaDesktop : styles.captchaPortrait)}\r\n                        style={{ background: `url(${captchas[captchaIndex]?.body}) no-repeat center center / cover` }}\r\n                    >\r\n                        <div\r\n                            onClick={() => switchImage(-1)}\r\n                            className={isDesktop ? styles.switchButtonDesktop + ' ' + styles.leftButtonDesktop\r\n                                : styles.switchButtonPortrait + ' ' + styles.leftButtonPortrait} />\r\n                        <div\r\n                            onClick={() => switchImage(1)}\r\n                            className={isDesktop ? styles.switchButtonDesktop + ' ' + styles.rightButtonDesktop\r\n                                : styles.switchButtonPortrait + ' ' + styles.rightButtonPortrait} />\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            <p className={isDesktop ? styles.updNoticeDesk + ' ' + styles.noselect\r\n                : styles.updNoticePort + ' ' + styles.noselect}>{noticeIsActive ? 'Получаем новую капчу...' : 'Приведите в одинаковое положение'}</p>\r\n            <div className={styles.captchaBttnsContainer + ' ' + styles.noselect}>\r\n                <UpdateCaptchaBttn\r\n                    updateCaptchaIndex={updateCaptchaIndex} updateCaptchaData={updateCaptchaData}\r\n                    isDesktop={isDesktop}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                />\r\n            </div>\r\n            <div className={styles.unswerContainer + ' ' + styles.noselect}>\r\n                <CaptchaSubmitBttn isDesktop={isDesktop} captchaValue={captchaValue}\r\n                    cbm={cbm} captchaIDs={[captchas[captchaIndex]?.captchaID]}\r\n                    updateCaptchaIsActive={updateCaptchaIsActive}\r\n                    updateCaptchaData={updateCaptchaData}\r\n                    updateCaptchaToken={updateCaptchaToken}\r\n                    updateCaptchaIndex={updateCaptchaIndex}\r\n                    inputRef={inputRef}\r\n                    updErrCounts={updErrCounts}\r\n                    errCounts={errCounts}\r\n                    captchaType={captchaType}\r\n                />\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nimport TextCaptcha from \"../../captchaes/textCaptcha/TextCaptcha\";\r\nimport CaptchaBaseModule from \"../../modules/CaptchaBaseModule\";\r\n\r\nimport styles from './captchaManager.css';\r\nimport DeadCaptcha from \"../../captchaes/deadCaptcha/DeadCaptcha\";\r\n\r\nimport CaptchaExitBttn from \"../captchaExitBttn/CaptchaExitBttn\";\r\nimport MathCaptcha from \"../../captchaes/mathCaptcha/MathCaptcha\";\r\nimport AudioCaptcha from \"../../captchaes/audioCaptcha/AudioCaptcha\";\r\nimport GraphCaptcha from \"../../captchaes/graphCaptcha/GraphCaptcha\";\r\nimport AnimeCaptcha from \"../../captchaes/animeCaptcha/AnimeCaptcha\";\r\n\r\n\r\nexport { TextCaptcha, DeadCaptcha, MathCaptcha, AudioCaptcha }\r\n\r\n\r\nexport default function CaptchaManager({ updateCaptchaIsActive, captchaIsActive, updateCaptchaToken, captchaType }) {\r\n    function screenStatus() {\r\n        return window.innerWidth > window.innerHeight ? true : false;\r\n    }\r\n\r\n    const cbm = new CaptchaBaseModule();\r\n\r\n    const [isDesktop, updateIsDesktop] = useState(screenStatus());\r\n\r\n    const [captchaValue, updateCaptchaValue] = useState('');\r\n    const [inputRef, updateInputRef] = useState(null);\r\n    const [serverIsLiving, updateServerStatus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchObj() {\r\n            const answer = await cbm.getServerStatus();\r\n            if (answer) {\r\n                // updateServerStatus(answer.ok);\r\n                updateServerStatus(true);\r\n            }\r\n        }\r\n        fetchObj();\r\n    }, []);\r\n\r\n    window.onresize = function () {\r\n        updateIsDesktop(screenStatus());\r\n    };\r\n\r\n    return (\r\n        <div> {\r\n            captchaIsActive ?\r\n                <div className={styles.captchaOuter}>\r\n                    <div className={isDesktop ? styles.captchaContainerDesktop : styles.captchaContainerPortrait}>\r\n                        <CaptchaExitBttn isDesktop={isDesktop} updateCaptchaIsActive={updateCaptchaIsActive} />\r\n                        {serverIsLiving ? captchaType === 'TEXT' ? <TextCaptcha\r\n                            updateCaptchaIsActive={updateCaptchaIsActive}\r\n                            isDesktop={isDesktop}\r\n                            captchaValue={captchaValue}\r\n                            updateCaptchaValue={updateCaptchaValue}\r\n                            updateCaptchaToken={updateCaptchaToken}\r\n                            inputRef={inputRef}\r\n                            updateInputRef={updateInputRef}\r\n                            cbm={cbm}\r\n                            captchaType={captchaType}\r\n                            captchaIsActive={captchaIsActive}\r\n                        />\r\n                            : captchaType === 'MATH' ?\r\n                                <MathCaptcha updateCaptchaIsActive={updateCaptchaIsActive}\r\n                                    isDesktop={isDesktop}\r\n                                    captchaValue={captchaValue}\r\n                                    updateCaptchaValue={updateCaptchaValue}\r\n                                    updateCaptchaToken={updateCaptchaToken}\r\n                                    inputRef={inputRef}\r\n                                    updateInputRef={updateInputRef}\r\n                                    cbm={cbm}\r\n                                    captchaType={captchaType}\r\n\r\n                                />\r\n                                : captchaType === 'AUDIO' ?\r\n                                    <AudioCaptcha updateCaptchaIsActive={updateCaptchaIsActive}\r\n                                        isDesktop={isDesktop}\r\n                                        captchaValue={captchaValue}\r\n                                        updateCaptchaValue={updateCaptchaValue}\r\n                                        updateCaptchaToken={updateCaptchaToken}\r\n                                        inputRef={inputRef}\r\n                                        updateInputRef={updateInputRef}\r\n                                        cbm={cbm}\r\n                                        captchaType={captchaType}\r\n                                    />\r\n                                    : captchaType === 'GRAPH' ?\r\n                                        <GraphCaptcha\r\n                                            updateCaptchaIsActive={updateCaptchaIsActive}\r\n                                            isDesktop={isDesktop}\r\n                                            captchaValue={captchaValue}\r\n                                            updateCaptchaValue={updateCaptchaValue}\r\n                                            updateCaptchaToken={updateCaptchaToken}\r\n                                            inputRef={inputRef}\r\n                                            updateInputRef={updateInputRef}\r\n                                            cbm={cbm}\r\n                                            captchaType={captchaType}\r\n                                        /> :\r\n                                        captchaType === 'ANIME' ?\r\n                                            <AnimeCaptcha\r\n                                                updateCaptchaIsActive={updateCaptchaIsActive}\r\n                                                isDesktop={isDesktop}\r\n                                                captchaValue={captchaValue}\r\n                                                updateCaptchaValue={updateCaptchaValue}\r\n                                                updateCaptchaToken={updateCaptchaToken}\r\n                                                inputRef={inputRef}\r\n                                                updateInputRef={updateInputRef}\r\n                                                cbm={cbm}\r\n                                                captchaType={captchaType}\r\n                                            /> :\r\n                                            <Fragment />\r\n                            : <DeadCaptcha isDesktop={isDesktop} />}\r\n                    </div>\r\n                </div> : <Fragment />\r\n        }\r\n        </div>\r\n    );\r\n}"],"names":["CaptchaProps","_useState","useState","captchaIsActive","updateCaptchaIsActive","_useState2","captchaToken","updateCaptchaToken","CaptchaSlider","_ref","isDesktop","updateCaptchaData","updateCaptchaIndex","captchas","width","setWidth","failedCounts","updateFailedCounts","changeWidth","event","target","value","checkRangePosition","React","createElement","className","styles","captchaSliderDesktop","captchaSlider","captchaSliderPortrait","type","onChange","onMouseUp","onTouchEnd","min","max","length","step","CaptchaInput","submitValue","_temp","_catch","Promise","resolve","cbm","checkCaptcha","code","captchaValue","captchaIDs","index","captchaIndex","captchaType","then","answer","audioStop","updErrCounts","errCounts","e","reject","updateCaptchaValue","updateInputRef","captchaInpRef","useRef","useEffect","ref","onKeyUp","key","current","captchaInputDesktop","captchaInputPortrait","placeholder","CaptchaSubmitBttn","inputRef","updateActiveStates","onClick","captchaSubmitBttnDesktop","captchaSubmitBttn","noselect","captchaSubmitBttnPortrait","UpdateCaptchaBttn","rerunCounts","updateRerunCounts","updateCaptchaBttnDesktop","updateCaptchaBttnPortrait","TextCaptcha","_captchas$captchaInde","_captchas$captchaInde2","_captchas$captchaInde3","getCaptcha","updateCaptchas","_useState3","captchaImg","src","body","captchaBttnsContainer","unswerContainer","captchaID","CONFIG","BACKEND_API","CaptchaBaseModule","_proto","prototype","postRequest","request","props","headers","axios","post","response","data","error","Error","message","getRequest","get","_this","getServerStatus","_this2","req","_temp2","_this3","_this3$postRequest","_this3$postRequest2","DeadCaptcha","serverStatus","captchaStatusNotificationdDesktop","captchaStatusNotificationdPortrait","CaptchaExitBttn","leftCaptchaContainer","captachaExitContainer","captchaExitBttnDesktop","captchaExitBttnPortrait","CaptchaToSpeech","audioPlay","captchaToSpeechBttnDesktop","captchaToSpeechBttnPortrait","AudioCaptcha","isUpd","noticeIsActive","updateNoticeState","setTimeout","audioPlayer","pause","currentTime","play","captchaBttn","captchaSpeechBttn","updNoticeDesk","updNoticePort","GraphCaptcha","updActiveCapthas","_useState4","activeCaptchasIndex","updActiveCapthasIndex","_useState5","activeCaptchas","_useState6","activeStates","_useState7","changeCaptchaState","indexCaptcha","indexOf","newActiveStates","concat","filter","elem","item","i","container","captchaContainer","gripGadDesktop","gripGadPortrait","map","captcha","captchaDesktop","elemActiveDesktop","captchaPortrait","elemActivePortrait","style","content","AnimeCaptcha","updStandard","standard","switchImage","state","background","switchButtonDesktop","leftButtonDesktop","switchButtonPortrait","leftButtonPortrait","rightButtonDesktop","rightButtonPortrait","CaptchaManager","screenStatus","window","innerWidth","innerHeight","updateIsDesktop","serverIsLiving","updateServerStatus","fetchObj","onresize","captchaOuter","captchaContainerDesktop","captchaContainerPortrait","MathCaptcha","Fragment"],"mappings":"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"}